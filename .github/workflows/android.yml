name: Fosdem Event Android App

on:
  workflow_dispatch:
  push:
    branches:
      - trunk
  pull_request:
    paths-ignore:
      - "**.md"
      - "*.png"
      - docs
      - ios
env:
  GITHUB_CLIENT_MIXPANEL_API_KEY: ${{ secrets.MIXPANEL_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TERM: dumb
      ORG_GRADLE_PROJECT_APP_RELEASE_KEYSTORE_PWD: ${{ secrets.ORG_GRADLE_PROJECT_APP_RELEASE_KEYSTORE_PWD }}
      ORG_GRADLE_PROJECT_APP_RELEASE_KEY_PWD: ${{ secrets.ORG_GRADLE_PROJECT_APP_RELEASE_KEY_PWD }}
      ORG_GRADLE_PROJECT_APP_RELEASE_KEYSTORE_ALIAS: ${{ secrets.ORG_GRADLE_PROJECT_APP_RELEASE_KEYSTORE_ALIAS }}
      ORG_GRADLE_PROJECT_APP_DEPLOYGATE_API_TOKEN: ${{ secrets.ORG_GRADLE_PROJECT_APP_DEPLOYGATE_API_TOKEN }}
      ORG_GRADLE_PROJECT_APP_DEPLOYGATE_ORGANIZATION: ${{  secrets.ORG_GRADLE_PROJECT_APP_DEPLOYGATE_ORGANIZATION }}

    steps:
      - name: Setup App Version Number
        shell: bash
        run: |
          echo "ORG_GRADLE_PROJECT_APP_VERSIONCODE=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/transforms-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: build-${{ hashFiles('build.gradle.kts') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('android-app/build.gradle') }}

      - name: Get Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: ./gradlew androidDependencies --stacktrace

      - name: Decrypt secrets
        run: ./scripts/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Check Spotless
        run: ./gradlew spotlessCheck --stacktrace

      - name: Run JVM Unit Tests
        run: ./gradlew jvmTest --stacktrace

      - name: Upload DevelRelease to deployGate
        run: ./gradlew uploadDeployGateAabDevelRelease --stacktrace

      #- name: Assemble Bundle
      #  run: ./gradlew assemble bundle

      #      - name: Publish Devel Build To Internal Track
      #        if: github.ref == 'refs/heads/main'
      #        uses: ./.github/actions/release
      #        with:
      #          play_track: internal
      #          release_files: android-app/build/outputs/bundle/develRelease/fosdem-event-app-devel-release.aab
      #          mapping_file: android-app/build/outputs/mapping/develRelease/mapping.txt

      #      - name: Publish Prod Builds To Alpha Track
      #        if: github.ref == 'refs/heads/main'
      #        uses: ./.github/actions/release
      #        with:
      #          play_track: alpha
      #          release_files: android-app/build/outputs/bundle/prodRelease/fosdem-event-app-prod-release.aab
      #          mapping_file: android-app/build/outputs/mapping/prodRelease/mapping.txt

      - name: Clean Secrets
        if: always()
        run: ./scripts/clean-secrets.sh

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: android-app/build/outputs
          retention-days: 1

      - name: Upload Build Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: android-app/build/reports
          retention-days: 1

      - name: Copy Test Results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: junit
          retention-days: 1

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "zulu"
      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/transforms-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: build-${{ hashFiles('build.gradle.kts') }}-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('android-app/build.gradle') }}

      - name: Lint
        run: ./gradlew lint --stacktrace

      - name: Upload Lint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results
          path: android-app/build/reports
          retention-days: 1
